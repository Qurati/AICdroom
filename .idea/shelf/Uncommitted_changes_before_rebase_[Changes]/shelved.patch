Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision ef03acbbe2eacb9c2b17476bb8179c7b99347764)
+++ b/.gitignore	(date 1742308605055)
@@ -1,0 +1,7 @@
+test.py
+database.db
+Makefile
+.dockerignore
+.venv
+pyvenv.cfg
+Dockerfile
Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.py b/test.py
new file mode 100644
--- /dev/null	(date 1742308420248)
+++ b/test.py	(date 1742308420248)
@@ -0,0 +1,55 @@
+
+
+# import openai
+#
+# openai.api_key = "sk-14b5628648e94a548576cc4733d13622"
+# openai.api_base = 'https://api.deepseek.com'
+# #client = OpenAI(api_key="sk-14b5628648e94a548576cc4733d13622", base_url="https://api.deepseek.com")
+#
+# # response = client.chat.completions.create(
+# #     model="deepseek-chat",
+# #     messages=[
+# #         {"role": "system", "content": "You are a helpful assistant"},
+# #         {"role": "user", "content": "Hello"},
+# #     ],
+# #     stream=False
+# # )
+# response = openai.ChatCompletion.create(
+#             model="deepseek-chat",
+#             messages=[
+#                 {"role": "system", "content": "You are a helpful assistant"},
+#                {"role": "user", "content": "Hello"},
+#              ],
+#             stream=False
+#         )
+# print(response.choices[0].message.content)
+
+
+import requests
+
+# Замените на ваш API-ключ
+API_KEY = "sk-14b5628648e94a548576cc4733d13622"
+API_URL = "https://api.deepseek.com/v1/chat/completions"
+
+headers = {
+    "Authorization": f"Bearer {API_KEY}",
+    "Content-Type": "application/json"
+}
+
+# Формируем запрос
+data = {
+    "model": "deepseek-chat",  # или "deepseek-coder"
+    "messages": [{"role": "user", "content": "Привет! Как дела?"}],
+    "temperature": 0.7,  # Степень креативности (0.0 - точность, 1.0 - креативность)
+    "max_tokens": 100  # Максимальное количество токенов в ответе
+}
+
+# Отправка запроса
+response = requests.post(API_URL, headers=headers, json=data)
+
+# Вывод результата
+if response.status_code == 200:
+    result = response.json()
+    print(result["choices"][0]["message"]["content"])
+else:
+    print(f"Ошибка: {response.status_code}, {response.text}")
\ No newline at end of file
